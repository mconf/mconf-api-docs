---
swagger: '2.0'
info:
  description: This is [Mconf's](https://mconf.github.io/api-mate/) oficial OpenAPI
    documentation file. It is available in [Redoc](https://redoc.ly/) and [SwaggerUI](https://swagger.io/)
    respectively.  This is a prototype, but the api key `special-key` is usable to
    test the authorization filters.
  version: 1.0.0
  title: Mconf API
  x-logo:
    url: 'https://s3.us-west-2.amazonaws.com/secure.notion-static.com/d78c2efe-0fdb-41ce-8b6c-9db63048856e/Mconf_Logo_Fundo_Azul.png?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Content-Sha256=UNSIGNED-PAYLOAD&X-Amz-Credential=AKIAT73L2G45EIPT3X45%2F20220207%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20220207T182411Z&X-Amz-Expires=86400&X-Amz-Signature=8bc973343c4e4ab0ca8e0188e105d7982792caae19ce8d16cf01614f754819dc&X-Amz-SignedHeaders=host&response-content-disposition=filename%20%3D%22Mconf_Logo%2520Fundo%2520Azul.png%22&x-id=GetObject'
    altText: Mconf Logo
  termsOfService: http://swagger.io/terms/
  contact:
    name: Mconf
    url: https://mconf.com
    email: contato@elos.vc
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
host: api.h.elos.dev
basePath: "/bigbluebutton/api"
tags:
- name: meeting
  description: Everything about your Meetings
  externalDocs:
    description: Find out more
    url: http://swagger.io
- name: recording
  description: Access Recording information
  externalDocs:
    description: Find out more
    url: http://swagger.io
- name: user
  description: User related operations
  externalDocs:
    description: Find out more
    url: http://swagger.io
- name: monitoring
  description: User related operations
  externalDocs:
    description: Find out more
    url: http://swagger.io
- name: administration
  description: User related operations
  externalDocs:
    description: Find out more
    url: http://swagger.io
schemes:
- http
- https
paths:

  "/":
    get:
      summary: Returns current API version
      description: Returns the API version currently being used by the Elos application in the selected enviroment.
      operationId: getAPI
      consumes:
      - application/json
      - application/xml
      produces:
      - application/json
      - application/xml
      parameters:
      - name: checksum
        in: query
        description: SHA-1 value calculated for validation in the API
        required: true
        type: string
      responses:
          '200':
            description: Successful operation
            examples:
              application/xml: |-
                |<response>
                  <returncode>SUCCESS</returncode>
                  <version>1.0</version>
                  </response>
          '400':
            description: Invalid checksum
            examples:
              application/xml: |-
                |<response>
                  <returncode>FAILED</returncode>
                  <messageKey>checksumError</messageKey>
                  <message>You did not pass the checksum security check</message>
                  </response>
            schema:
              "$ref": "#/definitions/Checksum"


  "/getDefaultConfigXML?checksum={checksum}":
    get:
      tags:
      - administration
      summary: Retrieves default `config.xml` file
      description: Retrieves the default `config.xml` file so it can be edited and set through the `setConfigXML` call.
      operationId: getXML
      consumes:
      - application/json
      - application/xml
      produces:
      - application/xml
      - application/json
      parameters:
      - name: checksum
        in: query
        description: SHA-1 value calculated for validation in the API
        required: true
        type: string
      responses:
        '200':
          description: Successful operation
          examples:
            application/xml: |-
              |[returns config.xml file]
        '400':
          description: Invalid checksum
          examples:
            application/xml: |-
             |<response>
               <returncode>FAILED</returncode>
               <messageKey>checksumError</messageKey>
               <message>You did not pass the checksum security check</message>
              </response>
          schema:
            "$ref": "#/definitions/Checksum"
      security:
      - mconf_auth:
        - write:mconf
        - read:mconf

  "/setConfigXML?checksum={checksum}":
    post:
      tags:
      - administration
      summary: Sets a custom `config.xml` file
      description: Sets a custom `config.xml` file for a meeting.
      operationId: postXML
      consumes:
      - application/json
      - application/xml
      produces:
      - application/xml
      - application/json
      parameters:
      - name: checksum
        in: query
        description: SHA-1 value calculated for validation in the API
        required: true
        type: string
      responses:
        '200':
          description: Successful operation
          examples:
            application/xml: |-
              |<response>
               <returncode>SUCCESS</returncode>
               <token>random-123</token>
              </response>
        '400':
          description: Invalid checksum
          examples:
            application/xml: |-
             |<response>
               <returncode>FAILED</returncode>
               <messageKey>checksumError</messageKey>
               <message>You did not pass the checksum security check</message>
              </response>
          schema:
            "$ref": "#/definitions/Checksum"
      security:
      - mconf_auth:
        - write:mconf
        - read:mconf

  "/getMeetings?checksum={checksum}":
    get:
      tags:
      - monitoring
      summary: Returns all meetings in progress
      description: Returns a XML with information about every meeting that is currently running.
      operationId: getMeetings
      consumes:
      - application/json
      - application/xml
      produces:
      - application/xml
      - application/json
      parameters:
      - name: checksum
        in: query
        description: SHA-1 value calculated for validation in the API
        required: true
        type: string
      responses:
        '200':
          description: Successful operation
          examples:
            application/xml: |-
              |<response>
                 <returncode>SUCCESS</returncode>
                 <meetings>
                   <meeting>
                     <meetingName>Meeting123</meetingName>
                     <meetingID>12345678-abcd-efgh-ijkl-123456789abc-defghijklm</meetingID>
                     <internalMeetingID>random-8630463</internalMeetingID>
                     <createTime>1643301169875</createTime>
                     <createDate>Thu Jan 27 13:32:49 BRT 2022</createDate>
                     <voiceBridge>65512</voiceBridge>
                     <dialNumber>613-555-1234</dialNumber>
                     <attendeePW>ap</attendeePW>
                     <moderatorPW>mp</moderatorPW>
                     <running>true</running>
                     <duration>0</duration>
                     <hasUserJoined>true</hasUserJoined>
                     <recording>true</recording>
                     <hasBeenForciblyEnded>false</hasBeenForciblyEnded>
                     <startTime>1643301174410</startTime>
                     <endTime>0</endTime>
                     <participantCount>3</participantCount>
                     <listenerCount>0</listenerCount>
                     <voiceParticipantCount>0</voiceParticipantCount>
                     <videoCount>0</videoCount>
                     <maxUsers>100</maxUsers>
                     <moderatorCount>1</moderatorCount>
                     <attendees>
                       <attendee>
                         <userID>149</userID>
                         <fullName>User123</fullName>
                         <role>MODERATOR</role>
                         <isPresenter>false</isPresenter>
                         <isListeningOnly>false</isListeningOnly>
                         <hasJoinedVoice>false</hasJoinedVoice>
                         <hasVideo>false</hasVideo>
                         <customdata>
                           <mconfweb_institution_subscription_type>premium</mconfweb_institution_subscription_type>
                           <mconfweb_institution_guid>random-89579</mconfweb_institution_guid>
                           <mconfweb_external_subscriber>true</mconfweb_external_subscriber>
                           <mconfweb_institution_name>usuario@mconf.com</mconfweb_institution_name>
                           <mconfweb_subscription_type>premium</mconfweb_subscription_type>
                           <bbb_override_default_locale>pt-br</bbb_override_default_locale>
                           <mconf_custom_record>false</mconf_custom_record>
                           <mconf_custom_language>pt-br</mconf_custom_language>
                           <mconf_custom_logout_url>https://h.elos.dev/conference/feedbacks/randomNumber123/thank_you</mconf_custom_logout_url>
                           <mconf_custom_record_tooltip>Você não pode gravar reuniões nesta sala</mconf_custom_record_tooltip>
                           <bbb_custom_style_url>https://live-oc003.elos.dev/css/custom-style.css</bbb_custom_style_url>
                         </customdata>
                       </attendee>
                     </attendees>
                   </meeting>
                   <meeting>
                   ...
                   </meeting>
                   <meeting>
                   ...
                   </meeting>
                 </meetings>                   
              </response>
          schema:
            "$ref": "#/definitions/Meeting"
        '400':
          description: Invalid checksum
          examples:
            application/xml: |-
             |<response>
               <returncode>FAILED</returncode>
               <messageKey>checksumError</messageKey>
               <message>You did not pass the checksum security check</message>
              </response>
          schema:
            "$ref": "#/definitions/Checksum"
      security:
      - mconf_auth:
        - write:mconf
        - read:mconf



  "/getAllMeetings?includeRecordings={includeRecordings}&checksum={checksum}":
    get:
      tags:
      - monitoring
      summary: Returns information about every meeting
      description: Returns a XML containing information about every meeting in the database, aswell as it's recordings.
      operationId: getAllMeetings
      consumes:
      - application/json
      - application/xml
      produces:
      - application/xml
      - application/json
      parameters:
      - name: includeRecordings
        in: query
        description: If recordings should be included in the response
        type: boolean
        default: false
      - name: checksum
        in: query
        description: SHA-1 value calculated for validation in the API
        required: true
        type: string
      responses:
        '200':
          description: Successful operation
          examples:
            application/xml: |-
              |<response>
                 <returncode>SUCCESS</returncode>
                 <nextpage>false</nextpage> 
                 <meetings>
                  <meetingData>
                    <meeting>
                     <meetingName>Meeting123</meetingName>
                     <meetingID>12345678-abcd-efgh-ijkl-123456789abc-defghijklm</meetingID>
                     <internalMeetingID>random-8630463</internalMeetingID>
                     <createTime>1643301169875</createTime>
                     <createDate>Thu Jan 27 13:32:49 BRT 2022</createDate>
                     <voiceBridge>65512</voiceBridge>
                     <dialNumber>613-555-1234</dialNumber>
                     <attendeePW>ap</attendeePW>
                     <moderatorPW>mp</moderatorPW>
                     <running>true</running>
                     <duration>0</duration>
                     <hasUserJoined>true</hasUserJoined>
                     <recording>true</recording>
                     <hasBeenForciblyEnded>false</hasBeenForciblyEnded>
                     <startTime>1643301174410</startTime>
                     <endTime>0</endTime>
                     <participantCount>3</participantCount>
                     <listenerCount>0</listenerCount>
                     <voiceParticipantCount>0</voiceParticipantCount>
                     <videoCount>0</videoCount>
                     <maxUsers>100</maxUsers>
                     <moderatorCount>1</moderatorCount>
                     <attendees>
                       <attendee>
                         <userID>149</userID>
                         <fullName>User123</fullName>
                         <role>MODERATOR</role>
                         <isPresenter>false</isPresenter>
                         <isListeningOnly>false</isListeningOnly>
                         <hasJoinedVoice>false</hasJoinedVoice>
                         <hasVideo>false</hasVideo>
                         <customdata>
                           <mconfweb_institution_subscription_type>premium</mconfweb_institution_subscription_type>
                           <mconfweb_institution_guid>random-89579</mconfweb_institution_guid>
                           <mconfweb_external_subscriber>true</mconfweb_external_subscriber>
                           <mconfweb_institution_name>usuario@mconf.com</mconfweb_institution_name>
                           <mconfweb_subscription_type>premium</mconfweb_subscription_type>
                           <bbb_override_default_locale>pt-br</bbb_override_default_locale>
                           <mconf_custom_record>false</mconf_custom_record>
                           <mconf_custom_language>pt-br</mconf_custom_language>
                           <mconf_custom_logout_url>https://h.elos.dev/conference/feedbacks/randomNumber123/thank_you</mconf_custom_logout_url>
                           <mconf_custom_record_tooltip>Você não pode gravar reuniões nesta sala</mconf_custom_record_tooltip>
                           <bbb_custom_style_url>https://live-oc003.elos.dev/css/custom-style.css</bbb_custom_style_url>
                         </customdata>
                       </attendee>
                     </attendees>
                   </meeting>
                   <recording>
                    <recordID>123456789randomvalues123456789-123456789</recordID>
                    <meetingID>123456789randomvalues123456789-123456789</meetingID>
                    <internalMeetingID>123456789randomvalues123456789-123456789</internalMeetingID>
                    <name>Cool Name</name>
                    <isBreakout>false</isBreakout>
                    <published>true</published>
                    <state>published</state>
                    <startTime>1643201046673</startTime>
                    <endTime>1643206124251</endTime>
                    <size>76302108</size>
                    <rawSize>0</rawSize>
                    <participants>4</participants>
                    <metadata>
                      <mconfweb-institution-subscription-type>premium</mconfweb-institution-subscription-type>
                      <mconf-shared-secret-guid>random-123</mconf-shared-secret-guid>
                      <bbbrails-user-id>149</bbbrails-user-id>
                      <mconfweb-external-subscriber>true</mconfweb-external-subscriber>
                      <mconfweb-institution-name>user@mconf.com</mconfweb-institution-name>
                      <mconfweb-room-type>User</mconfweb-room-type>
                      <mconf-institution-name>Mconf</mconf-institution-name>
                      <mconfweb-subscription-type>premium</mconfweb-subscription-type>
                      <invitation-url>https://h.elos.dev/username</invitation-url>
                      <bbbrails-user-name>Username</bbbrails-user-name>
                      <mconflb-guid>randomvalues==-randomnumbers</mconflb-guid>
                      <mconfweb-url>https://h.elos.dev/</mconfweb-url>
                      <mconf-subnet>Global</mconf-subnet>
                      <mconf-secret-name>h.elos.dev</mconf-secret-name>
                      <mconfweb-institution-guid>01234567-abcde-fghi-jklm-0123456789ab</mconfweb-institution-guid>
                      <mconf-institution-guid>01234567-abcde-fghi-jklm-0123456789ab</mconf-institution-guid>
                    </metadata>
                    <playback>
                      <format>
                        <type>presentation</type>
                        <url>https://rec.h.elos.dev/playback/presentation/2.3/thereisacodehere123456789-randomnumber</url>
                        <processingTime>0</processingTime>
                        <length>56</length>
                        <size>52363189</size>
                        <preview>
                          <images>
                            <image>https://rec.h.elos.dev/presentation/imageurl/thumbnails/coolImage.png</image>
                          </images>
                        </preview>
                      </format>
                    </playback>
                   </recording>
                  </meetingData>
                  <meetingData>
                  .
                  .
                  .
                  </meetingData>
                  <meetingData>
                  .
                  .
                  .
                  </meetingData>
                 </meetings>                  
              </response>
        '400':
          description: Invalid checksum
          examples:
            application/xml: |-
             |<response>
               <returncode>FAILED</returncode>
               <messageKey>checksumError</messageKey>
               <message>You did not pass the checksum security check</message>
              </response>
          schema:
            "$ref": "#/definitions/Checksum"
      security:
      - mconf_auth:
        - write:mconf
        - read:mconf

    post:
      tags:
      - monitoring
      summary: Returns information about every meeting
      description: Returns a XML containing information about every meeting in the database, aswell as it's recordings.
      operationId: postAllMeetings
      consumes:
      - application/json
      - application/xml
      produces:
      - application/xml
      - application/json
      parameters:
      - name: includeRecordings
        in: query
        description: If recordings should be included in the response
        type: boolean
        default: false
      - name: checksum
        in: query
        description: SHA-1 value calculated for validation in the API
        required: true
        type: string
      responses:
        '200':
          description: Successful operation
          examples:
            application/xml: |-
              |<response>
                 <returncode>SUCCESS</returncode>
                 <nextpage>false</nextpage> 
                 <meetings>
                  <meetingData>
                    <meeting>
                     <meetingName>Meeting123</meetingName>
                     <meetingID>12345678-abcd-efgh-ijkl-123456789abc-defghijklm</meetingID>
                     <internalMeetingID>random-8630463</internalMeetingID>
                     <createTime>1643301169875</createTime>
                     <createDate>Thu Jan 27 13:32:49 BRT 2022</createDate>
                     <voiceBridge>65512</voiceBridge>
                     <dialNumber>613-555-1234</dialNumber>
                     <attendeePW>ap</attendeePW>
                     <moderatorPW>mp</moderatorPW>
                     <running>true</running>
                     <duration>0</duration>
                     <hasUserJoined>true</hasUserJoined>
                     <recording>true</recording>
                     <hasBeenForciblyEnded>false</hasBeenForciblyEnded>
                     <startTime>1643301174410</startTime>
                     <endTime>0</endTime>
                     <participantCount>3</participantCount>
                     <listenerCount>0</listenerCount>
                     <voiceParticipantCount>0</voiceParticipantCount>
                     <videoCount>0</videoCount>
                     <maxUsers>100</maxUsers>
                     <moderatorCount>1</moderatorCount>
                     <attendees>
                       <attendee>
                         <userID>149</userID>
                         <fullName>User123</fullName>
                         <role>MODERATOR</role>
                         <isPresenter>false</isPresenter>
                         <isListeningOnly>false</isListeningOnly>
                         <hasJoinedVoice>false</hasJoinedVoice>
                         <hasVideo>false</hasVideo>
                         <customdata>
                           <mconfweb_institution_subscription_type>premium</mconfweb_institution_subscription_type>
                           <mconfweb_institution_guid>random-89579</mconfweb_institution_guid>
                           <mconfweb_external_subscriber>true</mconfweb_external_subscriber>
                           <mconfweb_institution_name>usuario@mconf.com</mconfweb_institution_name>
                           <mconfweb_subscription_type>premium</mconfweb_subscription_type>
                           <bbb_override_default_locale>pt-br</bbb_override_default_locale>
                           <mconf_custom_record>false</mconf_custom_record>
                           <mconf_custom_language>pt-br</mconf_custom_language>
                           <mconf_custom_logout_url>https://h.elos.dev/conference/feedbacks/randomNumber123/thank_you</mconf_custom_logout_url>
                           <mconf_custom_record_tooltip>Você não pode gravar reuniões nesta sala</mconf_custom_record_tooltip>
                           <bbb_custom_style_url>https://live-oc003.elos.dev/css/custom-style.css</bbb_custom_style_url>
                         </customdata>
                       </attendee>
                     </attendees>
                   </meeting>
                   <recording>
                    <recordID>123456789randomvalues123456789-123456789</recordID>
                    <meetingID>123456789randomvalues123456789-123456789</meetingID>
                    <internalMeetingID>123456789randomvalues123456789-123456789</internalMeetingID>
                    <name>Cool Name</name>
                    <isBreakout>false</isBreakout>
                    <published>true</published>
                    <state>published</state>
                    <startTime>1643201046673</startTime>
                    <endTime>1643206124251</endTime>
                    <size>76302108</size>
                    <rawSize>0</rawSize>
                    <participants>4</participants>
                    <metadata>
                      <mconfweb-institution-subscription-type>premium</mconfweb-institution-subscription-type>
                      <mconf-shared-secret-guid>random-123</mconf-shared-secret-guid>
                      <bbbrails-user-id>149</bbbrails-user-id>
                      <mconfweb-external-subscriber>true</mconfweb-external-subscriber>
                      <mconfweb-institution-name>user@mconf.com</mconfweb-institution-name>
                      <mconfweb-room-type>User</mconfweb-room-type>
                      <mconf-institution-name>Mconf</mconf-institution-name>
                      <mconfweb-subscription-type>premium</mconfweb-subscription-type>
                      <invitation-url>https://h.elos.dev/username</invitation-url>
                      <bbbrails-user-name>Username</bbbrails-user-name>
                      <mconflb-guid>randomvalues==-randomnumbers</mconflb-guid>
                      <mconfweb-url>https://h.elos.dev/</mconfweb-url>
                      <mconf-subnet>Global</mconf-subnet>
                      <mconf-secret-name>h.elos.dev</mconf-secret-name>
                      <mconfweb-institution-guid>01234567-abcde-fghi-jklm-0123456789ab</mconfweb-institution-guid>
                      <mconf-institution-guid>01234567-abcde-fghi-jklm-0123456789ab</mconf-institution-guid>
                    </metadata>
                    <playback>
                      <format>
                        <type>presentation</type>
                        <url>https://rec.h.elos.dev/playback/presentation/2.3/thereisacodehere123456789-randomnumber</url>
                        <processingTime>0</processingTime>
                        <length>56</length>
                        <size>52363189</size>
                        <preview>
                          <images>
                            <image>https://rec.h.elos.dev/presentation/imageurl/thumbnails/coolImage.png</image>
                          </images>
                        </preview>
                      </format>
                    </playback>
                   </recording>
                  </meetingData>
                  <meetingData>
                  .
                  .
                  .
                  </meetingData>
                  <meetingData>
                  .
                  .
                  .
                  </meetingData>
                 </meetings>                  
              </response>
        '400':
          description: Invalid checksum
          examples:
            application/xml: |-
             |<response>
                 <returncode>SUCCESS</returncode>
                 <meetings>true</meetings>                   
              </response>
          schema:
            "$ref": "#/definitions/Checksum"
      security:
      - mconf_auth:
        - write:mconf
        - read:mconf




  "/isMeetingRunning?meetingID={metingID}&checksum={checksum}":
    get:
      tags:
      - monitoring
      summary: Returns boolean value of a meeting's running status
      description: Returns a XML containing the boolean value of a specific meeting's 'running' row from the 'meetings' table in the database.
      operationId: getMeetingRunning
      consumes:
      - application/json
      - application/xml
      produces:
      - application/xml
      - application/json
      parameters:
      - name: meetingID
        in: query
        description: ID of the meeting in question
        required: true
        type: string
      - name: checksum
        in: query
        description: SHA-1 value calculated for validation in the API
        required: true
        type: string
      responses:
        '200':
          description: Successful operation
          examples:
            application/xml: |-
              |<response>
                 <returncode>SUCCESS</returncode>
                 <meetings>true</meetings>                   
              </response>
        '400':
          description: Invalid checksum
          examples:
            application/xml: |-
             |<response>
               <returncode>FAILED</returncode>
               <messageKey>checksumError</messageKey>
               <message>You did not pass the checksum security check</message>
              </response>
          schema:
            "$ref": "#/definitions/Checksum"
      security:
      - mconf_auth:
        - write:mconf
        - read:mconf

    post:
      tags:
      - monitoring
      summary: Returns information about a single meeting
      description: Returns a XML with information about a specific meeting.
      operationId: postMeetingRunning
      consumes:
      - application/json
      - application/xml
      produces:
      - application/xml
      - application/json
      parameters:
      - name: meetingID
        in: query
        description: ID of the meeting in question
        required: true
        type: string
      - name: checksum
        in: query
        description: SHA-1 value calculated for validation in the API
        required: true
        type: string
      responses:
        '200':
          description: Successful operation
          examples:
            application/xml: |-
              |<response>
                 <returncode>SUCCESS</returncode>
                 <meetings>true</meetings>                   
              </response>
        '400':
          description: Invalid checksum
          examples:
            application/xml: |-
             |<response>
                 <returncode>SUCCESS</returncode>
                 <meetings>true</meetings>                   
              </response>
          schema:
            "$ref": "#/definitions/Checksum"
      security:
      - mconf_auth:
        - write:mconf
        - read:mconf

  "/create?allowStartStopRecording={allowStartStopRecording}&name={name}&attendeePW={attendeePW}&record={record}&voiceBridge={voiceBridge}&welcome={welcome}&autoStartRecording={autoStartRecording}&meetingID={meetingID}&moderatorPW={moderatorPW}&checksum={checksum}":
    get:
      tags:
      - administration
      summary: Creates a meeting on the Elos platform
      description: One of, if not the most complex request, it must select a server in the cloud and create a meeting in that server with the infomration provided.
        It also uses the setConfigXML, which can be edited, to customize aspects of the meeting, as well of the request. 
      operationId: getCreate
      consumes:
      - application/json
      - application/xml
      produces:
      - application/xml
      - application/json
      parameters:
      - name: allowStartStopRecording
        in: query
        description: If meeting's recording can be started/stopped at will
        required: true
        type: boolean
        default: true
      - name: attendeePW
        in: query
        description: Meeting password for normal users
        required: true
        type: string
      - name: moderatorPW
        in: query
        description: Meeting password for moderators
        required: true
        type: string
      - name: autoStartRecording
        in: query
        description: If the meeting's recording will start automatically
        required: true
        type: boolean
        default: false
      - name: meetingID
        in: query
        description: ID of the meeting to be created
        required: true
        type: string
      - name: name
        in: query
        description: Name of the meeting that will be created
        required: true
        type: string
      - name: record
        in: query
        description: Instructs the server to record meeting for later playback
        required: true
        type: boolean
        default: false
      - name: voiceBridge
        in: query
        description: Unique number for the in the range of 10000 to 99999 for the FreeSWITCH voice conference associated with this meeting
        type: string
      - name: welcome
        in: query
        description: Welcome message that is displayed on the chat window when the participant joins
        type: string
      - name: password
        in: query
        description: Meeting password to join as Atendee or Moderator
        required: true
        type: string
      - name: checksum
        in: query
        description: SHA-1 value calculated for validation in the API
        required: true
        type: string
      responses:
        '200':
          description: Successful operation
          examples:
            application/xml: |-
              |<response>
                 <returncode>SUCCESS</returncode>
                 <meetingID>mymeeting</meetingID>
                 <internalMeetingID>
                 364366f1ca5940e99c149adbf046370ce8da625c-1529954869512
                 </internalMeetingID>
                 <parentMeetingID>bbb-none</parentMeetingID>
                 <attendeePW>EWOIptzv</attendeePW>
                 <moderatorPW>mp</moderatorPW>
                 <createTime>1529954870092</createTime>
                 <voiceBridge>55523</voiceBridge>
                 <dialNumber>613-555-1234</dialNumber>
                 <createDate>Mon Jun 25 21:27:50 CEST 2018</createDate>
                 <hasUserJoined>false</hasUserJoined>
                 <duration>0</duration>
                 <hasBeenForciblyEnded>false</hasBeenForciblyEnded>
                 <messageKey/>
                 <message/>
              </response>
        '400':
          description: Invalid checksum
          examples:
            application/xml: |-
             |<response>
               <returncode>FAILED</returncode>
               <messageKey>checksumError</messageKey>
               <message>You did not pass the checksum security check</message>
              </response>
          schema:
            "$ref": "#/definitions/Checksum"
      security:
      - mconf_auth:
        - write:mconf
        - read:mconf

    post:
      tags:
      - administration
      summary: Creates a meeting on the Elos platform
      description: One of, if not the most complex request, it must select a server in the cloud and create a meeting in that server with the infomration provided.
        It also uses the setConfigXML, which can be edited, to customize aspects of the meeting, as well of the request. 
      operationId: postEnd
      consumes:
      - application/json
      - application/xml
      produces:
      - application/xml
      - application/json
      parameters:
      - name: allowStartStopRecording
        in: query
        description: If meeting's recording can be started/stopped at will
        required: true
        type: boolean
        default: true
      - name: attendeePW
        in: query
        description: Meeting password for normal users
        required: true
        type: string
      - name: moderatorPW
        in: query
        description: Meeting password for moderators
        required: true
        type: string
      - name: autoStartRecording
        in: query
        description: If the meeting's recording will start automatically
        required: true
        type: boolean
        default: false
      - name: meetingID
        in: query
        description: ID of the meeting to be created
        required: true
        type: string
      - name: name
        in: query
        description: Name of the meeting that will be created
        required: true
        type: string
      - name: record
        in: query
        description: Instructs the server to record meeting for later playback
        required: true
        type: boolean
        default: false
      - name: voiceBridge
        in: query
        description: Unique number for the in the range of 10000 to 99999 for the FreeSWITCH voice conference associated with this meeting
        type: string
      - name: welcome
        in: query
        description: Welcome message that is displayed on the chat window when the participant joins
        type: string
      - name: password
        in: query
        description: Meeting password to join as Atendee or Moderator
        required: true
        type: string
      - name: checksum
        in: query
        description: SHA-1 value calculated for validation in the API
        required: true
        type: string
      
      responses:
        '200':
          description: Successful operation
          examples:
            application/xml: |-
              |<response>
                 <returncode>SUCCESS</returncode>
                 <meetingID>mymeeting</meetingID>
                 <internalMeetingID>
                 364366f1ca5940e99c149adbf046370ce8da625c-1529954869512
                 </internalMeetingID>
                 <parentMeetingID>bbb-none</parentMeetingID>
                 <attendeePW>EWOIptzv</attendeePW>
                 <moderatorPW>mp</moderatorPW>
                 <createTime>1529954870092</createTime>
                 <voiceBridge>55523</voiceBridge>
                 <dialNumber>613-555-1234</dialNumber>
                 <createDate>Mon Jun 25 21:27:50 CEST 2018</createDate>
                 <hasUserJoined>false</hasUserJoined>
                 <duration>0</duration>
                 <hasBeenForciblyEnded>false</hasBeenForciblyEnded>
                 <messageKey/>
                 <message/>
              </response>
        '400':
          description: Invalid checksum
          examples:
            application/xml: |-
             |<response>
                 <returncode>SUCCESS</returncode>
                 <meetings>true</meetings>                   
              </response>
          schema:
            "$ref": "#/definitions/Checksum"
      security:
      - mconf_auth:
        - write:mconf
        - read:mconf




  "/end?meetingID={metingID}&password={password}&checksum={checksum}":
    get:
      tags:
      - meeting
      summary: Sends an end meeting event
      description: Sends an end meeting event and returns a XML containing information if the request was successful or not.
      operationId: getEnd
      consumes:
      - application/json
      - application/xml
      produces:
      - application/xml
      - application/json
      parameters:
      - name: meetingID
        in: query
        description: Name of the user
        required: true
        type: string
      - name: password
        in: query
        description: Meeting password to join as Atendee or Moderator
        required: true
        type: string
      - name: checksum
        in: query
        description: SHA-1 value calculated for validation in the API
        required: true
        type: string
      responses:
        '200':
          description: Successful operation
          examples:
            application/xml: |-
              |<response>
                 <returncode>SUCCESS</returncode>
                 <messageKey>sentEndMeetingRequest</messageKey>
                 <message>A request to end the meeting was sent.  Please wait a few seconds, and then use the getMeetingInfo or isMeetingRunning API calls to verify that it was ended.</message>                   
              </response>
        '400':
          description: Invalid checksum
          examples:
            application/xml: |-
             |<response>
               <returncode>FAILED</returncode>
               <messageKey>checksumError</messageKey>
               <message>You did not pass the checksum security check</message>
              </response>
          schema:
            "$ref": "#/definitions/Checksum"
      security:
      - mconf_auth:
        - write:mconf
        - read:mconf

    post:
      tags:
      - meeting
      summary: Returns information about a single meeting
      description: Returns a XML with information about a specific meeting.
      operationId: postEnd
      consumes:
      - application/json
      - application/xml
      produces:
      - application/xml
      - application/json
      parameters:
      - name: meetingID
        in: query
        description: Name of the user
        required: true
        type: string
      - name: password
        in: query
        description: Meeting password to join as Atendee or Moderator
        required: true
        type: string
      - name: checksum
        in: query
        description: SHA-1 value calculated for validation in the API
        required: true
        type: string
      responses:
        '200':
          description: Successful operation
          examples:
            application/xml: |-
              |<response>
                 <returncode>SUCCESS</returncode>
                 <messageKey>sentEndMeetingRequest</messageKey>
                 <message>A request to end the meeting was sent.  Please wait a few seconds, and then use the getMeetingInfo or isMeetingRunning API calls to verify that it was ended.</message>                   
              </response>
        '400':
          description: Invalid checksum
          examples:
            application/xml: |-
             |<response>
                 <returncode>SUCCESS</returncode>
                 <meetings>true</meetings>                   
              </response>
          schema:
            "$ref": "#/definitions/Checksum"
      security:
      - mconf_auth:
        - write:mconf
        - read:mconf
















  "/getMeetingInfo?meetingID={metingID}&password={password}&checksum={checksum}":
    get:
      tags:
      - monitoring
      summary: Returns information about a single meeting
      description: Returns a XML with information about a specific meeting.
      operationId: getMeetingInfo
      consumes:
      - application/json
      - application/xml
      produces:
      - application/xml
      - application/json
      parameters:
      - name: meetingID
        in: query
        description: Name of the user
        required: true
        type: string
      - name: password
        in: query
        description: Meeting password to join as Atendee or Moderator
        required: true
        type: string
      - name: checksum
        in: query
        description: SHA-1 value calculated for validation in the API
        required: true
        type: string
      responses:
        '200':
          description: Successful operation
          examples:
            application/xml: |-
              |<response>
                 <returncode>SUCCESS</returncode>
                 <meetings>
                   <meeting>
                     <meetingName>Meeting123</meetingName>
                     <meetingID>12345678-abcd-efgh-ijkl-123456789abc-defghijklm</meetingID>
                     <internalMeetingID>random-8630463</internalMeetingID>
                     <createTime>1643301169875</createTime>
                     <createDate>Thu Jan 27 13:32:49 BRT 2022</createDate>
                     <voiceBridge>65512</voiceBridge>
                     <dialNumber>613-555-1234</dialNumber>
                     <attendeePW>ap</attendeePW>
                     <moderatorPW>mp</moderatorPW>
                     <running>true</running>
                     <duration>0</duration>
                     <hasUserJoined>true</hasUserJoined>
                     <recording>true</recording>
                     <hasBeenForciblyEnded>false</hasBeenForciblyEnded>
                     <startTime>1643301174410</startTime>
                     <endTime>0</endTime>
                     <participantCount>3</participantCount>
                     <listenerCount>0</listenerCount>
                     <voiceParticipantCount>0</voiceParticipantCount>
                     <videoCount>0</videoCount>
                     <maxUsers>100</maxUsers>
                     <moderatorCount>1</moderatorCount>
                     <attendees>
                       <attendee>
                         <userID>149</userID>
                         <fullName>User123</fullName>
                         <role>MODERATOR</role>
                         <isPresenter>false</isPresenter>
                         <isListeningOnly>false</isListeningOnly>
                         <hasJoinedVoice>false</hasJoinedVoice>
                         <hasVideo>false</hasVideo>
                         <customdata>
                           <mconfweb_institution_subscription_type>premium</mconfweb_institution_subscription_type>
                           <mconfweb_institution_guid>random-89579</mconfweb_institution_guid>
                           <mconfweb_external_subscriber>true</mconfweb_external_subscriber>
                           <mconfweb_institution_name>usuario@mconf.com</mconfweb_institution_name>
                           <mconfweb_subscription_type>premium</mconfweb_subscription_type>
                           <bbb_override_default_locale>pt-br</bbb_override_default_locale>
                           <mconf_custom_record>false</mconf_custom_record>
                           <mconf_custom_language>pt-br</mconf_custom_language>
                           <mconf_custom_logout_url>https://h.elos.dev/conference/feedbacks/randomNumber123/thank_you</mconf_custom_logout_url>
                           <mconf_custom_record_tooltip>Você não pode gravar reuniões nesta sala</mconf_custom_record_tooltip>
                           <bbb_custom_style_url>https://live-oc003.elos.dev/css/custom-style.css</bbb_custom_style_url>
                         </customdata>
                       </attendee>
                     </attendees>
                   </meetings>
                 </meetings>                   
              </response>
          schema:
            "$ref": "#/definitions/Meeting"
        '400':
          description: Invalid checksum
          examples:
            application/xml: |-
             |<response>
               <returncode>FAILED</returncode>
               <messageKey>checksumError</messageKey>
               <message>You did not pass the checksum security check</message>
              </response>
          schema:
            "$ref": "#/definitions/Checksum"
      security:
      - mconf_auth:
        - write:mconf
        - read:mconf

    post:
      tags:
      - monitoring
      summary: Returns information about a single meeting
      description: Returns a XML with information about a specific meeting.
      operationId: postMeetingInfo
      consumes:
      - application/json
      - application/xml
      produces:
      - application/xml
      - application/json
      parameters:
      - name: meetingID
        in: query
        description: Name of the user
        required: true
        type: string
      - name: password
        in: query
        description: Meeting password to join as Atendee or Moderator
        required: true
        type: string
      - name: checksum
        in: query
        description: SHA-1 value calculated for validation in the API
        required: true
        type: string
      responses:
        '200':
          description: Successful operation
          examples:
            application/xml: |-
              |<response>
                 <returncode>SUCCESS</returncode>
                 <meetings>
                   <meeting>
                     <meetingName>Meeting123</meetingName>
                     <meetingID>12345678-abcd-efgh-ijkl-123456789abc-defghijklm</meetingID>
                     <internalMeetingID>random-8630463</internalMeetingID>
                     <createTime>1643301169875</createTime>
                     <createDate>Thu Jan 27 13:32:49 BRT 2022</createDate>
                     <voiceBridge>65512</voiceBridge>
                     <dialNumber>613-555-1234</dialNumber>
                     <attendeePW>ap</attendeePW>
                     <moderatorPW>mp</moderatorPW>
                     <running>true</running>
                     <duration>0</duration>
                     <hasUserJoined>true</hasUserJoined>
                     <recording>true</recording>
                     <hasBeenForciblyEnded>false</hasBeenForciblyEnded>
                     <startTime>1643301174410</startTime>
                     <endTime>0</endTime>
                     <participantCount>3</participantCount>
                     <listenerCount>0</listenerCount>
                     <voiceParticipantCount>0</voiceParticipantCount>
                     <videoCount>0</videoCount>
                     <maxUsers>100</maxUsers>
                     <moderatorCount>1</moderatorCount>
                     <attendees>
                       <attendee>
                         <userID>149</userID>
                         <fullName>User123</fullName>
                         <role>MODERATOR</role>
                         <isPresenter>false</isPresenter>
                         <isListeningOnly>false</isListeningOnly>
                         <hasJoinedVoice>false</hasJoinedVoice>
                         <hasVideo>false</hasVideo>
                         <customdata>
                           <mconfweb_institution_subscription_type>premium</mconfweb_institution_subscription_type>
                           <mconfweb_institution_guid>random-89579</mconfweb_institution_guid>
                           <mconfweb_external_subscriber>true</mconfweb_external_subscriber>
                           <mconfweb_institution_name>usuario@mconf.com</mconfweb_institution_name>
                           <mconfweb_subscription_type>premium</mconfweb_subscription_type>
                           <bbb_override_default_locale>pt-br</bbb_override_default_locale>
                           <mconf_custom_record>false</mconf_custom_record>
                           <mconf_custom_language>pt-br</mconf_custom_language>
                           <mconf_custom_logout_url>https://h.elos.dev/conference/feedbacks/randomNumber123/thank_you</mconf_custom_logout_url>
                           <mconf_custom_record_tooltip>Você não pode gravar reuniões nesta sala</mconf_custom_record_tooltip>
                           <bbb_custom_style_url>https://live-oc003.elos.dev/css/custom-style.css</bbb_custom_style_url>
                         </customdata>
                       </attendee>
                     </attendees>
                   </meetings>
                 </meetings>                   
              </response>
          schema:
            "$ref": "#/definitions/Meeting"
        '400':
          description: Invalid checksum
          examples:
            application/xml: |-
             |<response>
               <returncode>FAILED</returncode>
               <messageKey>checksumError</messageKey>
               <message>You did not pass the checksum security check</message>
              </response>
          schema:
            "$ref": "#/definitions/Checksum"
      security:
      - mconf_auth:
        - write:mconf
        - read:mconf

  "/join?fullName={fullName}&meetingID={meetingID}&password={password}&redirect={redirect}&checksum={checksum}":
    get:
      tags:
      - administration
      summary: Join a meeting as an atendee or as a moderator
      description: Gets a redirect to the URL that the user must use to join the meeting.
        It also must respond when the `bigbluebutton` protocol is used (mobile).
      operationId: getJoin
      consumes:
      - application/json
      - application/xml
      produces:
      - application/xml
      - application/json
      parameters:
      - name: fullName
        in: query
        description: Name of the user
        required: true
        type: string
      - name: meetingID
        in: query
        description: ID of the meeting to be joined
        required: true
        type: string
      - name: password
        in: query
        description: Meeting password to join as Atendee or Moderator
        required: true
        type: string
      - name: redirect
        in: query
        description: Variable that defines if user will be redirected
        required: true
        type: boolean
        default: true
      - name: checksum
        in: query
        description: SHA-1 value calculated for validation in the API
        required: true
        type: string
      responses:
        '200':
          description: Successful operation, User redirected to meeting URL
        '400':
          description: Invalid checksum
          schema:
            "$ref": "#/definitions/Checksum"
      security:
      - mconf_auth:
        - write:mconf
        - read:mconf
    post:
      tags:
      - administration
      summary: Join a meeting as an atendee or as a moderator
      description: Gets a redirect to the URL that the user must use to join the meeting.
        It also must respond when the `bigbluebutton` protocol is used (mobile).
      operationId: postJoin
      consumes:
      - application/json
      - application/xml
      produces:
      - application/xml
      - application/json
      parameters:
      - name: fullName
        in: query
        description: Name of the user
        required: true
        type: string
      - name: meetingID
        in: query
        description: ID of the meeting to be joined
        required: true
        type: string
      - name: password
        in: query
        description: Meeting password to join as Atendee or Moderator
        required: true
        type: string
      - name: redirect
        in: query
        description: Variable that defines if user will be redirected
        required: true
        type: boolean
        default: true
      - name: checksum
        in: query
        description: SHA-1 value calculated for validation in the API
        required: true
        type: string
      responses:
        '200':
          description: Successful operation, User redirected to meeting URL
        '400':
          description: Invalid checksum
          schema:
            "$ref": "#/definitions/Checksum"
      security:
      - mconf_auth:
        - write:mconf
        - read:mconf

  "/getRecordings?meetingID={meetingID}&recordID={recordID}&checksum={checksum}":
    get:
      tags:
      - recording
      summary: Returns XML of the recordings
      description: Returns an XML with information of the specified recording(s)
      operationId: getRecording
      consumes:
      - application/json
      - application/xml
      produces:
      - application/xml
      - application/json
      parameters:
      - name: meetingID
        in: query
        description: ID of the meeting in question
        required: true
        type: string
      - name: recordID
        in: query
        description: ID of the recording in question
        required: true
        type: string
      - name: checksum
        in: query
        description: SHA-1 value calculated for validation in the API
        required: true
        type: string
      responses:
        '200':
          description: Successful operation, User redirected to meeting URL
          examples:
            application/xml: |-
              |<response>
               <returncode>SUCCESS</returncode>
               <nextpage>false</nextpage>
               <recordings>
                 <recording>
                   <recordID>123456789randomvalues123456789-123456789</recordID>
                   <meetingID>123456789randomvalues123456789-123456789</meetingID>
                   <internalMeetingID>123456789randomvalues123456789-123456789</internalMeetingID>
                   <name>Cool Name</name>
                   <isBreakout>false</isBreakout>
                   <published>true</published>
                   <state>published</state>
                   <startTime>1643201046673</startTime>
                   <endTime>1643206124251</endTime>
                   <size>76302108</size>
                   <rawSize>0</rawSize>
                   <participants>4</participants>
                   <metadata>
                     <mconfweb-institution-subscription-type>premium</mconfweb-institution-subscription-type>
                     <mconf-shared-secret-guid>random-123</mconf-shared-secret-guid>
                     <bbbrails-user-id>149</bbbrails-user-id>
                     <mconfweb-external-subscriber>true</mconfweb-external-subscriber>
                     <mconfweb-institution-name>user@mconf.com</mconfweb-institution-name>
                     <mconfweb-room-type>User</mconfweb-room-type>
                     <mconf-institution-name>Mconf</mconf-institution-name>
                     <mconfweb-subscription-type>premium</mconfweb-subscription-type>
                     <invitation-url>https://h.elos.dev/username</invitation-url>
                     <bbbrails-user-name>Username</bbbrails-user-name>
                     <mconflb-guid>randomvalues==-randomnumbers</mconflb-guid>
                     <mconfweb-url>https://h.elos.dev/</mconfweb-url>
                     <mconf-subnet>Global</mconf-subnet>
                     <mconf-secret-name>h.elos.dev</mconf-secret-name>
                     <mconfweb-institution-guid>01234567-abcde-fghi-jklm-0123456789ab</mconfweb-institution-guid>
                     <mconf-institution-guid>01234567-abcde-fghi-jklm-0123456789ab</mconf-institution-guid>
                   </metadata>
                   <playback>
                     <format>
                       <type>presentation</type>
                       <url>https://rec.h.elos.dev/playback/presentation/2.3/thereisacodehere123456789-randomnumber</url>
                       <processingTime>0</processingTime>
                       <length>56</length>
                       <size>52363189</size>
                       <preview>
                         <images>
                           <image>https://rec.h.elos.dev/presentation/imageurl/thumbnails/coolImage.png</image>
                         </images>
                       </preview>
                     </format>
                   </playback>
                 </recording>
               </recordings>
              </response>
          schema:
            "$ref": "#/definitions/Recording"
        '400':
          description: Invalid checksum
          examples:
           application/xml: |-
            |<response>
             <returncode>FAILED</returncode>
             <messageKey>checksumError</messageKey>
             <message>You did not pass the checksum security check</message>
            </response>
          schema:
            "$ref": "#/definitions/Checksum"
      security:
      - mconf_auth:
        - write:mconf
        - read:mconf
    post:
      tags:
      - recording
      summary: Join a meeting as an atendee or as a moderator
      description: Gets a redirect to the URL that the user must use to join the meeting.
        It also must respond when the `bigbluebutton` protocol is used (mobile).
      operationId: postRecording
      consumes:
      - application/json
      - application/xml
      produces:
      - application/xml
      - application/json
      parameters:
      - name: meetingID
        in: query
        description: ID of the meeting in question
        required: true
        type: string
      - name: recordID
        in: query
        description: ID of the recording in question
        required: true
        type: string
      - name: checksum
        in: query
        description: SHA-1 value calculated for validation in the API
        required: true
        type: string
      responses:
        '200':
          description: Successful operation, User redirected to meeting URL
          examples:
            application/xml: |- 
             |<response>
               <returncode>SUCCESS</returncode>
               <nextpage>false</nextpage>
               <recordings>
                 <recording>
                   <recordID>123456789randomvalues123456789-123456789</recordID>
                   <meetingID>123456789randomvalues123456789-123456789</meetingID>
                   <internalMeetingID>123456789randomvalues123456789-123456789</internalMeetingID>
                   <name>Cool Name</name>
                   <isBreakout>false</isBreakout>
                   <published>true</published>
                   <state>published</state>
                   <startTime>1643201046673</startTime>
                   <endTime>1643206124251</endTime>
                   <size>76302108</size>
                   <rawSize>0</rawSize>
                   <participants>4</participants>
                   <metadata>
                     <mconfweb-institution-subscription-type>premium</mconfweb-institution-subscription-type>
                     <mconf-shared-secret-guid>random-123</mconf-shared-secret-guid>
                     <bbbrails-user-id>149</bbbrails-user-id>
                     <mconfweb-external-subscriber>true</mconfweb-external-subscriber>
                     <mconfweb-institution-name>user@mconf.com</mconfweb-institution-name>
                     <mconfweb-room-type>User</mconfweb-room-type>
                     <mconf-institution-name>Mconf</mconf-institution-name>
                     <mconfweb-subscription-type>premium</mconfweb-subscription-type>
                     <invitation-url>https://h.elos.dev/username</invitation-url>
                     <bbbrails-user-name>Username</bbbrails-user-name>
                     <mconflb-guid>randomvalues==-randomnumbers</mconflb-guid>
                     <mconfweb-url>https://h.elos.dev/</mconfweb-url>
                     <mconf-subnet>Global</mconf-subnet>
                     <mconf-secret-name>h.elos.dev</mconf-secret-name>
                     <mconfweb-institution-guid>01234567-abcde-fghi-jklm-0123456789ab</mconfweb-institution-guid>
                     <mconf-institution-guid>01234567-abcde-fghi-jklm-0123456789ab</mconf-institution-guid>
                   </metadata>
                   <playback>
                     <format>
                       <type>presentation</type>
                       <url>https://rec.h.elos.dev/playback/presentation/2.3/thereisacodehere123456789-randomnumber</url>
                       <processingTime>0</processingTime>
                       <length>56</length>
                       <size>52363189</size>
                       <preview>
                         <images>
                           <image>https://rec.h.elos.dev/presentation/imageurl/thumbnails/coolImage.png</image>
                         </images>
                       </preview>
                     </format>
                   </playback>
                 </recording>
               </recordings>
             </response>
          schema:
            "$ref": "#/definitions/Recording"
        '400':
          description: Invalid checksum
          schema:
            "$ref": "#/definitions/Checksum"
      security:
      - mconf_auth:
        - write:mconf
        - read:mconf

  "/publishRecordings?publish={publish}&recordID={recordID}&checksum={checksum}":
    get:
      tags:
      - recording
      summary: Modifies publish status of recording
      description: Modifies boolean value of the `publish` row in the `recordings` table to the one specified in the query.
      operationId: getPublish
      consumes:
      - application/json
      - application/xml
      produces:
      - application/json
      - application/xml
      parameters:
      - name: publish
        in: query
        description: Boolean value of the recording's publish status
        required: true
        type: boolean
        default: false
      - name: recordID
        in: query
        description: ID of the recording to be published/unpublished
        required: true
        type: string
      - name: checksum
        in: query
        description: SHA-1 value calculated for validation in the API
        required: true
        type: string
      responses:
          '200':
            description: Successful operation
            examples:
              application/xml: |-
                |<response>
                 <returncode>SUCCESS</returncode>
                 <published>true</version>
                </response>
          '400':
            description: Invalid checksum
            examples:
              application/xml: |-
                |<response>
                 <returncode>FAILED</returncode>
                 <messageKey>checksumError</messageKey>
                 <message>You did not pass the checksum security check</message>
                </response>
            schema:
              "$ref": "#/definitions/Checksum"

    post:
      tags:
      - recording
      summary: Modifies publish status of recording
      description: Modifies boolean value of the `publish` row in the `recordings` table to the one specified in the query.
      operationId: getPublish
      consumes:
      - application/json
      - application/xml
      produces:
      - application/json
      - application/xml
      parameters:
      - name: publish
        in: query
        description: Boolean value of the recording's publish status
        required: true
        type: boolean
        default: false
      - name: recordID
        in: query
        description: ID of the recording to be published/unpublished
        required: true
        type: string
      - name: checksum
        in: query
        description: SHA-1 value calculated for validation in the API
        required: true
        type: string
      responses:
          '200':
            description: Successful operation
            examples:
              application/xml: |-
                |<response>
                 <returncode>SUCCESS</returncode>
                 <published>true</version>
                </response>
          '400':
            description: Invalid checksum
            examples:
              application/xml: |-
                |<response>
                 <returncode>FAILED</returncode>
                 <messageKey>checksumError</messageKey>
                 <message>You did not pass the checksum security check</message>
                </response>
            schema:
              "$ref": "#/definitions/Checksum"

  "/deleteRecordings?recordID={recordID}&checksum={checksum}":
    get:
      tags:
      - recording
      summary: Deletes recording
      description: Deletes specified recording(s) from the database.
      operationId: getDelete
      consumes:
      - application/json
      - application/xml
      produces:
      - application/json
      - application/xml
      parameters:
      - name: recordID
        in: query
        description: ID of the recording to be deleted
        required: true
        type: string
      - name: checksum
        in: query
        description: SHA-1 value calculated for validation in the API
        required: true
        type: string
      responses:
          '200':
            description: Successful operation
            examples:
              application/xml: |-
                |<response>
                 <returncode>SUCCESS</returncode>
                 <published>true</version>
                </response>
          '400':
            description: Invalid checksum
            examples:
              application/xml: |-
                |<response>
                 <returncode>FAILED</returncode>
                 <messageKey>checksumError</messageKey>
                 <message>You did not pass the checksum security check</message>
                </response>
            schema:
              "$ref": "#/definitions/Checksum"

    post:
      tags:
      - recording
      summary: Deletes recording
      description: Deletes specified recording(s) from the database.
      operationId: postDelete
      consumes:
      - application/json
      - application/xml
      produces:
      - application/json
      - application/xml
      parameters:
      - name: recordID
        in: query
        description: ID of the recording to be deleted
        required: true
        type: string
      - name: checksum
        in: query
        description: SHA-1 value calculated for validation in the API
        required: true
        type: string
      responses:
          '200':
            description: Successful operation
            examples:
              application/xml: |-
                |<response>
                 <returncode>SUCCESS</returncode>
                 <published>true</version>
                </response>
          '400':
            description: Invalid checksum
            examples:
              application/xml: |-
                |<response>
                 <returncode>FAILED</returncode>
                 <messageKey>checksumError</messageKey>
                 <message>You did not pass the checksum security check</message>
                </response>
            schema:
              "$ref": "#/definitions/Checksum"


  "/updateRecordings?recordID={recordID}&checksum={checksum}":
    get:
      tags:
      - recording
      summary: Modifies recording information
      description: Modifies one or more metadata values of one or more recordings given a recordID or (or set of record IDs). The metadata fields are given in the request by prefixing with meta_ followed by the field name and value like `meta_field=value`.
      operationId: getUpdate
      consumes:
      - application/json
      - application/xml
      produces:
      - application/json
      - application/xml
      parameters:
      - name: recordID
        in: query
        description: ID of the recording to be updated
        required: true
        type: string
      - name: checksum
        in: query
        description: SHA-1 value calculated for validation in the API
        required: true
        type: string
      responses:
          '200':
            description: Successful operation
            examples:
              application/xml: |-
                |<response>
                 <returncode>SUCCESS</returncode>
                 <published>true</version>
                </response>
          '400':
            description: Invalid checksum
            examples:
              application/xml: |-
                |<response>
                 <returncode>FAILED</returncode>
                 <messageKey>checksumError</messageKey>
                 <message>You did not pass the checksum security check</message>
                </response>
            schema:
              "$ref": "#/definitions/Checksum"

    post:
      tags:
      - recording
      summary: Modifies recording information
      description: Modifies one or more metadata values of one or more recordings given a recordID or (or set of record IDs). The metadata fields are given in the request by prefixing with meta_ followed by the field name and value like `meta_field=value`.
      operationId: postUpdate
      consumes:
      - application/json
      - application/xml
      produces:
      - application/json
      - application/xml
      parameters:
      - name: recordID
        in: query
        description: ID of the recording to be updated
        required: true
        type: string
      - name: checksum
        in: query
        description: SHA-1 value calculated for validation in the API
        required: true
        type: string
      responses:
          '200':
            description: Successful operation
            examples:
              application/xml: |-
                |<response>
                 <returncode>SUCCESS</returncode>
                 <published>true</version>
                </response>
          '400':
            description: Invalid checksum
            examples:
              application/xml: |-
                |<response>
                 <returncode>FAILED</returncode>
                 <messageKey>checksumError</messageKey>
                 <message>You did not pass the checksum security check</message>
                </response>
            schema:
              "$ref": "#/definitions/Checksum"



securityDefinitions:
  mconf_auth:
    type: oauth2
    authorizationUrl: http://google.com
    flow: implicit
    scopes:
      write:mconf: modify mconf
      read:mconf: read your mconf
  api_key:
    type: apiKey
    name: api_key
    in: header
definitions:
  ApiResponse:
    type: object
    properties:
      code:
        type: integer
        format: int32
      type:
        type: string
      message:
        type: string
  Metadata:
    type: object
    properties:
      mconfweb-institution-subscription-type:
        type: string
        example: premium
      mconf-shared-secret-guid:
        type: string
        example: random-123
      bbbrails-user-id:
        type: integer
        format: int64
        example: 149
      mconfweb-external-subscriber:
        type: boolean
        example: true
      mconfweb-institution-name:
        type: string
        example: user@mconf.com
      mconfweb-room-type:
        type: string
        example: User
      mconf-institution-name:
        type: string
        example: Mconf
      mconfweb-subscription-type:
        type: string
        example: premium
      invitation-url:
        type: string
        example: https://h.elos.dev/username
      bbbrails-user-name:
        type: string
        example: Username
      mconflb-guid:
        type: string
        example: randomvalues==-randomnumbers
      mconfweb-url:
        type: string
        example: https://h.elos.dev/
      mconf-subnet:
        type: string
        example: Global
      mconf-secret-name:
        type: string
        example: h.elos.dev
      mconfweb-institution-guid:
        type: string
        example: 01234567-abcde-fghi-jklm-0123456789ab
      mconf-institution-guid:
        type: string
        example: 01234567-abcde-fghi-jklm-0123456789ab
    xml:
      name: metadata
  CustomData:
    type: object
    properties:
      mconfweb_institution_subscription_type:
        type: string
        example: premium
      bbb_custom_style_url:
        type: string
        example: https://live-oc003.elos.dev/css/custom-style.css
      mconfweb_subscription_type:
        type: string
        example: premium
      mconfweb_institution_guid:
        type: string
        example: random-89579
      bbb_override_default_locale:
        type: string
        example: pt-br
      mconf_custom_record:
        type: boolean
        example: false
      mconf_custom_record_tooltip:
        type: string
        example: Você não pode gravar reuniões nesta sala
      mconfweb_external_subscriber:
        type: boolean
        example: true
      mconf_custom_language:
        type: string
        example: pt-br
      mconf_custom_logout_url:
        type: string
        example: https://h.elos.dev/conference/feedbacks/randomNumber123/thank_you
      mconfweb_institution_name:
        type: string
        example: usuario@mconf.com
    xml:
      name: customdata
  Atendees:
    type: object
    properties:
      Atendee:
        type: object
        properties:
          userID:
            type: integer
            format: int64
            example: 149
          fullName:
            type: string
            example: User123
          role:
            type: string
            example: MODERATOR
          isPresenter:
            type: boolean
            example: false
          isListeningOnly:
            type: boolean
            example: false
          hasJoinedVoice:
            type: boolean
            example: false
          hasVideo:
            type: boolean
            example: false
          customData:
            "$ref": "#/definitions/CustomData"
    xml:
      name: Atendees
  Recording:
    type: object
    properties:
      returncode:
        type: string
        example: SUCCESS
      nextpage:
        type: boolean
        example: false
      recordings:
        type: object
        properties:
          recording:
            type: object
            properties:
              recordID:
                type: string
                example: 123456789randomvalues123456789-123456789
              meetingID:
                type: string
                example: 123456789randomvalues123456789-123456789
              internalMeetingID:
                type: string
                example: 123456789randomvalues123456789-123456789
              name:
                type: string
                example: Cool Name
              isBreakout:
                type: boolean
                example: false
              published:
                type: boolean
                example: true
              state:
                type: string
                example: published
              startTime:
                type: string
                example: '1643201046673'
              endTime:
                type: string
                example: '1643206124251'
              size:
                type: string
                example: '76302108'
              rawSize:
                type: string
                example: '0'
              participants:
                type: string
                example: '4'
              metaData:
                "$ref": "#/definitions/Metadata"
              playback:
                "$ref": "#/definitions/Playback"
  Playback:
    type: object
    properties:
      format:
        type: object
        properties:
          type:
            type: string
            example: presentation
          url:
            type: string
            example: https://rec.h.elos.dev/playback/presentation/2.3/thereisacodehere123456789-randomnumber
          processingTime:
            type: string
            example: '0'
          length:
            type: string
            example: '56'
          size:
            type: string
            example: '52363189'
          preview:
            type: object
            properties:
              images:
                type: object
                properties:
                  image:
                    type: string
                    example: https://rec.h.elos.dev/presentation/imageurl/thumbnails/coolImage.png
  Meeting:
    type: object
    properties:
      returncode:
        type: string
        example: SUCCESS
      meetings:
        type: object
        properties:
          meeting:
            type: object
            properties:
              meetingName:
                type: string
                example: Meeting123
              meetingID:
                type: string
                example: 12345678-abcd-efgh-ijkl-123456789abc-defghijklm
              internalMeetingID:
                type: string
                example: random-8630463
              createTime:
                type: string
                example: '1643301169875'
              createDate:
                type: string
                format: date-time
                example: Thu Jan 27 13:32:49 BRT 2022
              voiceBridge:
                type: string
                example: '65512'
              dialNumber:
                type: string
                example: 613-555-1234
              atendeePW:
                type: string
                example: ap
              moderatorPW:
                type: string
                example: mp
              running:
                type: boolean
                example: true
              duration:
                type: integer
                format: int32
                example: 0
              hasUserJoined:
                type: boolean
                example: true
              recording:
                type: boolean
                example: true
              hasBeenForciblyEnded:
                type: boolean
                example: false
              startTime:
                type: string
                example: '1643301174410'
              endTime:
                type: string
                example: '0'
              participantCount:
                type: integer
                format: int32
                example: 2
              listenerCount:
                type: integer
                format: int32
                example: 0
              voiceParticipantCount:
                type: integer
                format: int32
                example: 0
              videoCount:
                type: integer
                format: int32
                example: 0
              maxUsers:
                type: integer
                format: int32
                example: 100
              moderatorCount:
                type: integer
                format: int32
                example: 1
              atendees:
                "$ref": "#/definitions/Atendees"
              metaData:
                "$ref": "#/definitions/Metadata"
              isBreakout:
                type: boolean
                example: false
              transfer:
                type: boolean
                example: false
              transferCount:
                type: integer
                format: int32
                example: 0
    xml:
      name: response
  Checksum:
    type: object
    properties:
      returncode:
        type: string
        example: FAILED
      messageKey:
        type: string
        example: checksumError
      message:
        type: string
        example: You did not pass the checksum security check
    xml:
      name: response
externalDocs:
  description: Find out more about Swagger
  url: http://swagger.io
