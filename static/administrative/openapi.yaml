openapi: 3.0.0
info:
  title: Elos Administrative API
  description: |
    ###  Coming soon ðŸš¨
    Administrative API for managing Elos institutions and users
  version: 0.5.0
  servers:
    - url: https://api.h.elos.dev/

paths:
  /institution/{guid}:
    get:
      summary: institution
      parameters:
        - name: guid
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: Institution details
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Institution"
        "404":
          description: Institution not found
        "500":
          description: Internal server error

    put:
      summary: institution
      parameters:
        - name: guid
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateInstitution"
      responses:
        "200":
          description: Institution updated
        "400":
          description: Invalid request body
        "404":
          description: Institution not found
        "409":
          description: Name already exists
        "500":
          description: Internal server error

  /institution/:
    post:
      summary: institution
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateInstitution"
      responses:
        "201":
          description: Institution created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Institution"
        "400":
          description: Invalid request body
        "409":
          description: Institution name already exists
        "500":
          description: Internal server error

  /institution/{guid}/meeting_settings:
    get:
      summary: institution/meeting_settings
      parameters:
        - name: guid
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: Meeting settings
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MeetingSettings"
        "404":
          description: Institution not found
        "500":
          description: Internal server error

  /institution/{guid}/unsubscription:
    post:
      summary: institution/unsubscription
      parameters:
        - name: guid
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: Institution unsubscribed
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnsubscribeResponse"
        "404":
          description: Institution not found
        "500":
          description: Internal server error

  /institution/{guid}/reactivation:
    post:
      summary: institution/reactivation
      parameters:
        - name: guid
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: Institution reactivated
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ReactivateResponse"
        "404":
          description: Institution not found
        "500":
          description: Internal server error

  /user/{external_user_id}:
    delete:
      summary: user
      parameters:
        - name: external_user_id
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: User data removed
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RemoveUserResponse"
        "404":
          description: User not found
        "500":
          description: Internal server error

components:
  schemas:
    Institution:
      type: object
      properties:
        guid:
          type: string
          format: uuid
        name:
          type: string
        shared_secrets:
          type: array
          items:
            $ref: "#/components/schemas/SharedSecret"

    SharedSecret:
      type: object
      properties:
        guid:
          type: string
          format: uuid
        name:
          type: string
        secret:
          type: string

    CreateInstitution:
      type: object
      required:
        - name
        - secret_name
      properties:
        name:
          type: string
        secret_name:
          type: string

    UpdateInstitution:
      type: object
      required:
        - name
      properties:
        name:
          type: string
        participants_limit:
          type: integer
          minimum: 0
        retention_days:
          type: integer
          minimum: 1
        meeting_limit:
          type: integer
          minimum: 0

    MeetingSettings:
      type: object
      properties:
        institution_guid:
          type: string
          format: uuid
        settings:
          type: array
          items:
            $ref: "#/components/schemas/MeetingSetting"

    MeetingSetting:
      type: object
      properties:
        type:
          type: string
        key:
          type: string
        value:
          type: string

    UnsubscribeResponse:
      type: object
      properties:
        guid:
          type: string
          format: uuid
        unsubscription_timestamp:
          type: string
          format: date-time
        total_expired_secrets:
          type: integer
        expired_secrets:
          type: array
          items:
            $ref: "#/components/schemas/SharedSecret"

    ReactivateResponse:
      type: object
      properties:
        guid:
          type: string
          format: uuid
        total_enabled_secrets:
          type: integer
        enabled_secrets:
          type: array
          items:
            $ref: "#/components/schemas/SharedSecret"

    RemoveUserResponse:
      type: object
      properties:
        external_user_id:
          type: string
        total_anonymized_records:
          type: integer
